@model CuaHang.Models.ThongTinSanPham

@{
    ViewBag.Title = "Thêm sản phẩm";
}

<h2 style="text-align: center;">Thêm sản phẩm</h2>

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" style="text-align: center;">@ViewBag.ErrorMessage</div>
}

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div class="alert alert-success" style="text-align: center;">@ViewBag.SuccessMessage</div>
}

@using (Html.BeginForm("Index", "ThemSanPham", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="k-form k-form-horizontal" style="max-width: 600px; margin: 0 auto;">
        <h4 style="text-align: center;">Thông tin sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger", style = "text-align: center;" })

        <div class="k-form-field" style="text-align: center;">
            @Html.LabelFor(model => model.ProductID, "Mã sản phẩm", new { @class = "k-label", style = "display: block; text-align: center;" })
            @Html.Kendo().TextBoxFor(model => model.ProductID).HtmlAttributes(new { @class = "k-textbox", style = "width: 200px; margin: 0 auto;", @id = "ProductID" })
            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger", style = "text-align: center;" })
        </div>

        <div class="k-form-field" style="text-align: center;">
            @Html.LabelFor(model => model.ProductName, "Tên sản phẩm", new { @class = "k-label", style = "display: block; text-align: center;" })
            @Html.Kendo().TextBoxFor(model => model.ProductName).HtmlAttributes(new { @class = "k-textbox", style = "width: 200px; margin: 0 auto;" })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger", style = "text-align: center;" })
        </div>

        <div class="k-form-field" style="text-align: center;">
            @Html.LabelFor(model => model.Price, "Giá thành", new { @class = "k-label", style = "display: block; text-align: center;" })
            @Html.Kendo().NumericTextBoxFor(model => model.Price).HtmlAttributes(new { @class = "k-textbox", style = "width: 200px; margin: 0 auto;" })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger", style = "text-align: center;" })
        </div>

        <div class="k-form-buttons" style="text-align: center; margin-top: 20px;">
            <div style="display: inline-block; margin-left: 200px;">
                <input type="submit" value="Nhập tiếp" class="k-button k-primary" style="width: 100px; margin-right: 10px;" />
                <button type="button" class="k-button k-secondary" onclick="resetForm()" style="width: 100px;">Hủy</button>
            </div>
        </div>
    </div>
}

<div style="text-align: center; margin-top: 20px;">
    @Html.ActionLink("Quay lại", "Index", "SanPham", null, new { @class = "k-button k-secondary", style = "width: 100px;" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#ProductID').on('input', function () {
                var value = $(this).val().toUpperCase().replace(/\s/g, '');
                $(this).val(value);
            });
        });

        function resetForm() {
            document.forms[0].reset();
        }
    </script>
}

