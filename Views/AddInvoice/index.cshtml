@model CuaHang.Models.InvoiceInfo

@{
    ViewBag.Title = "Add New Invoice";
}

<h2>Add New Invoice</h2>

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div class="alert alert-success">@ViewBag.SuccessMessage</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Invoice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceID, new { htmlAttributes = new { @class = "form-control", @oninput = "this.value = this.value.toUpperCase().replace(/\\s/g, '')" } })
                @Html.ValidationMessageFor(model => model.InvoiceID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustomerID, (SelectList)ViewBag.Customers, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @value = Model.InvoiceDate.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Invoice Details</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Sản phẩm</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Tổng giá</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="invoiceDetails">
                @{
                    var invoiceDetailsList = Model.InvoiceDetails.ToList();
                    for (int i = 0; i < invoiceDetailsList.Count; i++)
                    {
                        @Html.Partial("_InvoiceDetailRow", invoiceDetailsList[i])
                    }
                }
            </tbody>
        </table>
        <button type="button" class="btn btn-success" id="addDetailRow">Add Product</button>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="reset" value="Reset" class="btn btn-secondary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            $('#addDetailRow').click(function () {
                $.ajax({
                    url: '@Url.Action("AddInvoiceDetail")',
                    type: 'POST',
                    success: function (data) {
                        $('#invoiceDetails').append(data);
                    }
                });
            });

            $(document).on('change', '.product-dropdown', function () {
                var productID = $(this).val();
                var $row = $(this).closest('.invoice-detail-row');
                $.ajax({
                    url: '@Url.Action("GetProductPrice", "AddInvoice")',
                    type: 'GET',
                    data: { productID: productID },
                    success: function (price) {
                        $row.find('.unitPrice').val(price);
                        updateTotalPrice();
                    }
                });
            });

            $(document).on('change', '.quantity, .unitPrice', function () {
                updateTotalPrice();
            });

            function updateTotalPrice() {
                var total = 0;
                $('#invoiceDetails tr').each(function () {
                    var quantity = $(this).find('.quantity').val();
                    var unitPrice = $(this).find('.unitPrice').val();
                    var totalPrice = quantity * unitPrice;
                    $(this).find('.totalPrice').text(totalPrice.toFixed(2));
                    total += totalPrice;
                });
                $('#TotalPrice').val(total.toFixed(2));
            }
        });
    </script>
}
