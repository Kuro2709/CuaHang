@model CuaHang.Models.ThongTinHoaDon
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Chỉnh sửa hóa đơn";
}

<h2>Chỉnh sửa hóa đơn</h2>

@if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Mã hóa đơn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.InvoiceID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.InvoiceID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "Khách hàng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.CustomerID)
                    .BindTo((SelectList)(ViewBag.Customers ?? new SelectList(Enumerable.Empty<SelectListItem>())))
                    .OptionLabel("Chọn khách hàng")
                    .HtmlAttributes(new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày tạo hóa đơn", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DatePickerFor(model => model.InvoiceDate)
                    .HtmlAttributes(new { @class = "form-control" }))
                @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Chi tiết sản phẩm</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Sản phẩm</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Tổng giá</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="invoiceDetails">
                @foreach (var detail in Model.InvoiceDetails)
                {
                    @Html.Partial("_InvoiceDetailRow", detail)
                }
            </tbody>
        </table>
        <button type="button" class="k-button k-primary" id="addDetailRow">Thêm sản phẩm</button>

        <div class="form-group">
            <label class="control-label col-md-2">Tổng tiền</label>
            <div class="col-md-10">
                <input type="text" id="TotalPrice" class="form-control" readonly value="@Model.TotalPrice.ToString("C")" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="k-button k-primary" />
                <button type="button" class="k-button" id="resetForm">Làm mới</button>
            </div>
        </div>

        @Html.Hidden("OriginalInvoice", Newtonsoft.Json.JsonConvert.SerializeObject(Model))
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {
            // Initialize Kendo UI buttons
            $("#addDetailRow").kendoButton();
            $("input[type='submit']").kendoButton();
            $("#resetForm").kendoButton();

            // Function to update total price
            function updateTotalPrice() {
                var total = 0;
                $('#invoiceDetails .invoice-detail-row').each(function () {
                    var rowTotal = parseFloat($(this).find('.totalPrice').text()) || 0;
                    total += rowTotal;
                });
                $('#TotalPrice').val(total.toFixed(2));
            }

            // Event handler for deleting a detail row
            $(document).on('click', '.remove-row', function () {
                $(this).closest('tr').remove();
                updateTotalPrice();
            });

            // Event handler for adding a new detail row
            $('#addDetailRow').click(function () {
                $.ajax({
                    url: '@Url.Action("AddInvoiceDetail")',
                    type: 'POST',
                    success: function (data) {
                        $('#invoiceDetails').append(data);
                        updateTotalPrice();
                    }
                });
            });

            // Initial call to update total price
            updateTotalPrice();
        });
    </script>
}

